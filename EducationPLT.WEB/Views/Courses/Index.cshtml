@model EducationPLT.WEB.ViewModels.CousesVMs.CourseListViewModel
@{
    ViewData["Title"] = "Courses";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Page Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-graduation-cap text-primary me-2"></i>
                        Course Management
                    </h2>
                    <p class="text-muted mb-0">Manage and view all courses in the platform</p>
                </div>
                <div>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i>
                        Create New Course
                    </a>
                </div>
            </div>

            <!-- Filters Card -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h6 class="mb-0">
                        <i class="fas fa-filter me-2"></i>
                        Filters & Search
                    </h6>
                </div>
                <div class="card-body">
                    <form method="get" asp-action="Index">
                        <div class="row g-3">
                            <!-- Search Term -->
                            <div class="col-md-3">
                                <label for="searchTerm" class="form-label">Search</label>
                                <input asp-for="SearchTerm" class="form-control" placeholder="Search courses..." />
                            </div>

                            <!-- Status Filter -->
                            <div class="col-md-2">
                                <label for="statusFilter" class="form-label">Status</label>
                                <select asp-for="StatusFilter" class="form-select">
                                    <option value="">All Status</option>
                                    <option value="0">Draft</option>
                                    <option value="1">Pending Review</option>
                                    <option value="2">Active</option>
                                    <option value="3">Inactive</option>
                                    <option value="4">Archived</option>
                                </select>
                            </div>

                            <!-- Difficulty Filter -->
                            <div class="col-md-2">
                                <label for="difficultyFilter" class="form-label">Difficulty</label>
                                <select asp-for="DifficultyFilter" class="form-select">
                                    <option value="">All Levels</option>
                                    <option value="0">Beginner</option>
                                    <option value="1">Intermediate</option>
                                    <option value="2">Advanced</option>
                                    <option value="3">Expert</option>
                                </select>
                            </div>

                            <!-- Published Filter -->
                            <div class="col-md-2">
                                <label for="publishedFilter" class="form-label">Published</label>
                                <select asp-for="IsPublishedFilter" class="form-select">
                                    <option value="">All</option>
                                    <option value="true">Published</option>
                                    <option value="false">Unpublished</option>
                                </select>
                            </div>

                            <!-- Free/Paid Filter -->
                            <div class="col-md-2">
                                <label for="freeFilter" class="form-label">Type</label>
                                <select asp-for="IsFreeFilter" class="form-select">
                                    <option value="">All Types</option>
                                    <option value="true">Free</option>
                                    <option value="false">Paid</option>
                                </select>
                            </div>

                            <!-- Action Buttons -->
                            <div class="col-md-1 d-flex align-items-end">
                                <div class="btn-group" role="group">
                                    <button type="submit" class="btn btn-outline-primary">
                                        <i class="fas fa-search"></i>
                                    </button>
                                    <a asp-action="Index" class="btn btn-outline-secondary">
                                        <i class="fas fa-undo"></i>
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- Instructor Filter (Full Width) -->
                        <div class="row g-3 mt-2">
                            <div class="col-md-6">
                                <label for="instructorFilter" class="form-label">Instructor</label>
                                <input asp-for="InstructorFilter" class="form-control" placeholder="Search by instructor name or email..." />
                            </div>
                        </div>

                        <!-- Hidden fields for pagination -->
                        <input type="hidden" asp-for="CurrentPage" />
                        <input type="hidden" asp-for="PageSize" />
                        <input type="hidden" asp-for="SortBy" />
                        <input type="hidden" asp-for="SortDirection" />
                    </form>
                </div>
            </div>

            <!-- Results Summary -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <p class="text-muted mb-0">
                        Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to
                        @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCourses))
                        of @Model.TotalCourses courses
                    </p>
                </div>
                <div class="col-md-6 text-end">
                    <div class="btn-group btn-group-sm" role="group">
                        <input type="radio" class="btn-check" name="sortOptions" id="sortTitle"
                               onchange="updateSort('title')" @(Model.SortBy == "title" ? "checked" : "")>
                        <label class="btn btn-outline-secondary" for="sortTitle">
                            <i class="fas fa-sort-alpha-down"></i> Title
                        </label>

                        <input type="radio" class="btn-check" name="sortOptions" id="sortDate"
                               onchange="updateSort('createdat')" @(Model.SortBy == "createdat" ? "checked" : "")>
                        <label class="btn btn-outline-secondary" for="sortDate">
                            <i class="fas fa-sort-numeric-down"></i> Date
                        </label>

                        <input type="radio" class="btn-check" name="sortOptions" id="sortEnrollments"
                               onchange="updateSort('enrollments')" @(Model.SortBy == "enrollments" ? "checked" : "")>
                        <label class="btn btn-outline-secondary" for="sortEnrollments">
                            <i class="fas fa-users"></i> Students
                        </label>
                    </div>
                </div>
            </div>

            <!-- Courses Grid -->
            @if (Model.Courses != null && Model.Courses.Any())
            {
                <div class="row">
                    @foreach (var course in Model.Courses)
                    {
                        
                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="card h-100 shadow-sm course-card">
                                <!-- Course Image -->
                                <div class="position-relative">
                                    @if (!string.IsNullOrEmpty(course.ThumbnailUrl))
                                    {
                                        <img src="@course.ThumbnailUrl" class="card-img-top" alt="@course.Title" style="height: 200px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                            <i class="fas fa-image text-muted fa-3x"></i>
                                        </div>
                                    }

                                    <!-- Status Badge -->
                                    <span class="position-absolute top-0 end-0 m-2 badge
                                        @(course.Status.ToString() switch
                                        {
                                            "Active" => "bg-success",
                                            "Draft" => "bg-secondary",
                                            "PendingReview" => "bg-warning",
                                            "Inactive" => "bg-danger",
                                            _ => "bg-secondary"
                                        })">
                                        @course.Status
                                    </span>

                                    <!-- Free/Paid Badge -->
                                    @if (course.IsFree)
                                    {
                                        <span class="position-absolute top-0 start-0 m-2 badge bg-info">Free</span>
                                    }
                                    else
                                    {
                                        <span class="position-absolute top-0 start-0 m-2 badge bg-primary">@course.Price?.ToString("C")</span>
                                    }
                                </div>

                                <div class="card-body d-flex flex-column">
                                    <!-- Course Title -->
                                    <h5 class="card-title">@course.Title</h5>

                                    <!-- Course Description -->
                                    <p class="card-text text-muted small flex-grow-1">@course.ShortDescription</p>

                                    <!-- Course Meta Info -->
                                    <div class="row text-muted small mb-3">
                                        <div class="col-6">
                                            <i class="fas fa-user me-1"></i>
                                            @course.InstructorName
                                        </div>
                                        <div class="col-6 text-end">
                                            <i class="fas fa-signal me-1"></i>
                                            @course.Difficulty
                                        </div>
                                    </div>

                                    <!-- Course Stats -->
                                    <div class="row text-muted small mb-3">
                                        <div class="col-4 text-center">
                                            <i class="fas fa-users text-primary"></i>
                                            <div>@course.EnrolledCount/@course.MaxStudents</div>
                                            <small>Students</small>
                                        </div>
                                        <div class="col-4 text-center">
                                            <i class="fas fa-clock text-primary"></i>
                                            <div>@(course.EstimatedDuration?.ToString() ?? "TBA")</div>
                                            <small>Minutes</small>
                                        </div>
                                        <div class="col-4 text-center">
                                            <i class="fas fa-calendar text-primary"></i>
                                            <div>@course.CreatedAt.ToString("MMM dd")</div>
                                            <small>Created</small>
                                        </div>
                                    </div>

                                    <!-- Published Status -->
                                    <div class="mb-3">
                                        @if (course.IsPublished)
                                        {
                                            <span class="badge bg-success">
                                                <i class="fas fa-check me-1"></i>Published
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">
                                                <i class="fas fa-eye-slash me-1"></i>Unpublished
                                            </span>
                                        }
                                    </div>

                                    <!-- Action Buttons -->
                                    <div class="d-grid gap-2">
                                        <div class="btn-group" role="group">
                                            <a asp-action = "Details" asp-route-id="@course.CourseId" class="btn btn-outline-primary btn-sm">
                                                <i class="fas fa-eye"></i> View
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@course.CourseId" class="btn btn-outline-secondary btn-sm">
                                                <i class="fas fa-edit"></i> Edit
                                            </a>
                                            <button asp-action="Delete" asp-route-id="@course.CourseId" type="button" class="btn btn-outline-danger btn-sm"
                                                    onclick="confirmDelete(@course.CourseId, '@course.Title')">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Course pagination">
                        <ul class="pagination justify-content-center">
                            <!-- Previous Page -->
                            <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                                <a class="page-link" href="@GetPageUrl(Model.CurrentPage - 1)" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>

                            <!-- Page Numbers -->
                            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@GetPageUrl(i)">@i</a>
                                </li>
                            }

                            <!-- Next Page -->
                            <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                                <a class="page-link" href="@GetPageUrl(Model.CurrentPage + 1)" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            }
            else
            {
                <!-- No Courses Found -->
                <div class="text-center py-5">
                    <div class="mb-4">
                        <i class="fas fa-graduation-cap text-muted" style="font-size: 4rem;"></i>
                    </div>
                    <h4 class="text-muted">No Courses Found</h4>
                    <p class="text-muted">No courses match your current filters. Try adjusting your search criteria.</p>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i>
                        Create Your First Course
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    public string GetPageUrl(int page)
    {
        return Url.Action("Index", new
        {
            CurrentPage = page,
            PageSize = Model.PageSize,
            SearchTerm = Model.SearchTerm,
            StatusFilter = Model.StatusFilter,
            DifficultyFilter = Model.DifficultyFilter,
            IsPublishedFilter = Model.IsPublishedFilter,
            IsFreeFilter = Model.IsFreeFilter,
            InstructorFilter = Model.InstructorFilter,
            SortBy = Model.SortBy,
            SortDirection = Model.SortDirection
        });
    }
}

@section Scripts {
    <script>
        function updateSort(sortBy) {
            var currentSort = '@Model.SortBy'.toLowerCase();
            var currentDirection = '@Model.SortDirection';
            var newDirection = 'asc';

            if (currentSort === sortBy.toLowerCase()) {
                newDirection = currentDirection === 'asc' ? 'desc' : 'asc';
            }

            var url = new URL(window.location.href);
            url.searchParams.set('SortBy', sortBy);
            url.searchParams.set('SortDirection', newDirection);
            url.searchParams.set('CurrentPage', '1');

            window.location.href = url.toString();
        }

        function confirmDelete(courseId, courseTitle) {
            if (confirm(`Are you sure you want to delete the course "${courseTitle}"? This action cannot be undone.`)) {
                // Add delete functionality here
                console.log('Deleting course:', courseId);
            }
        }

        // Auto-submit form on filter change (optional)
        $(document).ready(function() {
            $('.form-select').change(function() {
                // Uncomment to auto-submit on filter change
                // $(this).closest('form').submit();
            });
        });
    </script>

    <style>
        .course-card {
            transition: transform 0.2s ease-in-out;
        }

        .course-card:hover {
            transform: translateY(-5px);
        }

        .page-link {
            color: #0d6efd;
        }

        .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }
    </style>
}